/*******************************************************************************
 * Open Behavioral Health Information Technology Architecture (OBHITA.org)
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the <organization> nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************/
package ihe.iti.xds_b._2007;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import org.tempuri.DocumentRepositoryService;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;

// TODO: Auto-generated Javadoc
/**
 * This class was generated by Apache CXF 2.6.0
 * 2012-12-04T11:19:24.294-07:00
 * Generated source version: 2.6.0
 * 
 */
public final class XDSRepository_XDSRepositoryHTTPSEndpoint_Client {

    /** The Constant SERVICE_NAME. */
    private static final QName SERVICE_NAME = new QName("http://tempuri.org/", "DocumentRepositoryService");

    /**
     * Instantiates a new xDS repository_ xds repository https endpoint_ client.
     */
    private XDSRepository_XDSRepositoryHTTPSEndpoint_Client() {
    }

    /**
     * The main method.
     *
     * @param args the arguments
     * @throws Exception the exception
     */
    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = DocumentRepositoryService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        DocumentRepositoryService ss = new DocumentRepositoryService(wsdlURL, SERVICE_NAME);
        XDSRepository port = ss.getXDSRepositoryHTTPSEndpoint();  
        
        {
        System.out.println("Invoking retrieveDocumentSet...");
        ihe.iti.xds_b._2007.RetrieveDocumentSetRequest _retrieveDocumentSet_input = null;
        ihe.iti.xds_b._2007.RetrieveDocumentSetResponse _retrieveDocumentSet__return = port.retrieveDocumentSet(_retrieveDocumentSet_input);
        System.out.println("retrieveDocumentSet.result=" + _retrieveDocumentSet__return);


        }
        {
        System.out.println("Invoking provideAndRegisterDocumentSet...");
        ihe.iti.xds_b._2007.ProvideAndRegisterDocumentSetRequest _provideAndRegisterDocumentSet_input = null;
        ihe.iti.xds_b._2007.ProvideAndRegisterDocumentSetResponse _provideAndRegisterDocumentSet__return = port.provideAndRegisterDocumentSet(_provideAndRegisterDocumentSet_input);
        System.out.println("provideAndRegisterDocumentSet.result=" + _provideAndRegisterDocumentSet__return);


        }

        System.exit(0);
    }

}
