/*******************************************************************************
 * Open Behavioral Health Information Technology Architecture (OBHITA.org)
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the <organization> nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************/
package org.tempuri;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import ihe.iti.xds_b._2007.XDSRepository;
import javax.xml.ws.Service;

// TODO: Auto-generated Javadoc
/**
 * This class was generated by Apache CXF 2.6.0
 * 2012-12-04T11:19:24.315-07:00
 * Generated source version: 2.6.0
 * 
 */
@WebServiceClient(name = "DocumentRepositoryService", 
                  wsdlLocation = "classpath:XDS.b_repository.net.wsdl",
                  targetNamespace = "http://tempuri.org/") 
public class DocumentRepositoryService extends Service {

    /** The Constant WSDL_LOCATION. */
    public final static URL WSDL_LOCATION;

    /** The Constant SERVICE. */
    public final static QName SERVICE = new QName("http://tempuri.org/", "DocumentRepositoryService");
    
    /** The Constant XDSRepositoryHTTPEndpoint. */
    public final static QName XDSRepositoryHTTPEndpoint = new QName("http://tempuri.org/", "XDSRepository_HTTP_Endpoint");
    
    /** The Constant XDSRepositoryHTTPSEndpoint. */
    public final static QName XDSRepositoryHTTPSEndpoint = new QName("http://tempuri.org/", "XDSRepository_HTTPS_Endpoint");
    static {
        URL url = DocumentRepositoryService.class.getClassLoader().getResource("XDS.b_repository.net.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(DocumentRepositoryService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "classpath:XDS.b_repository.net.wsdl");
        }       
        WSDL_LOCATION = url;   
    }

    /**
     * Instantiates a new document repository service.
     *
     * @param wsdlLocation the wsdl location
     */
    public DocumentRepositoryService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    /**
     * Instantiates a new document repository service.
     *
     * @param wsdlLocation the wsdl location
     * @param serviceName the service name
     */
    public DocumentRepositoryService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /**
     * Instantiates a new document repository service.
     */
    public DocumentRepositoryService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     * Gets the xDS repository http endpoint.
     *
     * @return the xDS repository http endpoint
     * returns XDSRepository
     */
    @WebEndpoint(name = "XDSRepository_HTTP_Endpoint")
    public XDSRepository getXDSRepositoryHTTPEndpoint() {
        return super.getPort(XDSRepositoryHTTPEndpoint, XDSRepository.class);
    }

    /**
     * Gets the xDS repository http endpoint.
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return the xDS repository http endpoint
     * returns XDSRepository
     */
    @WebEndpoint(name = "XDSRepository_HTTP_Endpoint")
    public XDSRepository getXDSRepositoryHTTPEndpoint(WebServiceFeature... features) {
        return super.getPort(XDSRepositoryHTTPEndpoint, XDSRepository.class, features);
    }
    
    /**
     * Gets the xDS repository https endpoint.
     *
     * @return the xDS repository https endpoint
     * returns XDSRepository
     */
    @WebEndpoint(name = "XDSRepository_HTTPS_Endpoint")
    public XDSRepository getXDSRepositoryHTTPSEndpoint() {
        return super.getPort(XDSRepositoryHTTPSEndpoint, XDSRepository.class);
    }

    /**
     * Gets the xDS repository https endpoint.
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return the xDS repository https endpoint
     * returns XDSRepository
     */
    @WebEndpoint(name = "XDSRepository_HTTPS_Endpoint")
    public XDSRepository getXDSRepositoryHTTPSEndpoint(WebServiceFeature... features) {
        return super.getPort(XDSRepositoryHTTPSEndpoint, XDSRepository.class, features);
    }

}
